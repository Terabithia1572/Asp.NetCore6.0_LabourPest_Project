@model Writer
@{
    ViewData["Title"] = "UpdateCustomer";
    Layout = "~/Views/Shared/_AdminDashboard.cshtml";
}

<div class="border-bottom border-translucent mb-7 mx-n3 px-2 mx-lg-n6 px-lg-6">
    <div class="row">
        <div class="col-xl-9">
            <div class="d-sm-flex justify-content-between">
                <h2 class="mb-4">Müşteri Güncelleme Sayfası</h2>
                <div class="d-flex mb-3"><button class="btn btn-phoenix-primary me-2 px-6">İptal Et</button><a class="btn btn-primary" href="/RegisterCustomer/CustomerList">Müşteri Listesi</a></div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-xl-9">
      

        <div class="d-flex align-items-end position-relative mb-7">
            <input class="d-none" id="upload-avatar" type="file" onchange="uploadProfileImage(event)" />
            <div class="hoverbox" style="width: 150px; height: 150px">
                <div class="hoverbox-content rounded-circle d-flex flex-center z-1" style="--phoenix-bg-opacity: .56;">
                    <span class="fa-solid fa-camera fs-1 text-body-quaternary"></span>
                </div>
                <div class="position-relative bg-body-quaternary rounded-circle cursor-pointer d-flex flex-center mb-xxl-7">
                    <div class="avatar avatar-5xl">
                        <img id="preview-avatar" class="rounded-circle" src="~/labourpestcustomer/assets/img/team/150x150/58.webp" alt="" />
                    </div>
                    <label class="w-100 h-100 position-absolute z-1" for="upload-avatar"></label>
                </div>
            </div>
        </div>
        <h4 class="mb-3">Müşteri Bilgileri </h4>
        <form class="row g-3 mb-9" method="post">
            @Html.HiddenFor(x => x.WriterID)

            <div class="col-sm-6 col-md-4">
                <div class="form-floating">
                    @Html.TextBoxFor(x => x.WriterName, new { @class = "form-control", placeholder = "First name", id = "floatingInputFirstname" })
                    <label for="floatingInputFirstname">AD</label>
                </div>
            </div>

            <div class="col-sm-6 col-md-4">
                <div class="form-floating">
                    @Html.TextBoxFor(x => x.WriterSurname, new { @class = "form-control", placeholder = "Last name", id = "floatingInputLastname" })
                    <label for="floatingInputLastname">SOYAD</label>
                </div>
            </div>

            <div class="col-sm-6 col-md-4">
                <div class="form-floating">
                    @Html.TextBoxFor(x => x.WriterAbout, new { @class = "form-control", placeholder = "About", id = "floatingInputCompany" })
                    <label for="floatingInputCompany">HAKKINDA</label>
                </div>
            </div>

            <div class="col-sm-6 col-md-4">
                <div class="form-floating">
                    @Html.TextBoxFor(x => x.WriterImage, new { @class = "form-control", placeholder = "Image", id = "floatingInputTitle" })
                    <label for="floatingInputTitle">RESİM</label>
                </div>
            </div>

            <div class="col-sm-6 col-md-4">
                <div class="form-floating">
                    @Html.TextBoxFor(x => x.WriterMail, new { @class = "form-control", placeholder = "Email", id = "floatingInputEmail" })
                    <label for="floatingInputEmail">E-MAİL</label>
                </div>
            </div>

            <div class="col-sm-6 col-md-4">
                <div class="form-floating">
                    @Html.TextBoxFor(x => x.WriterPassword, new { @class = "form-control", placeholder = "Password", id = "floatingInputPhone" })
                    <label for="floatingInputPhone">ŞİFRE</label>
                </div>
            </div>

            <div class="col-12 d-flex justify-content-end mt-6">
                <button class="btn btn-primary" type="submit">Müşteri Güncelle</button>
            </div>
        </form>
    </div>
</div>
<script>
    async function uploadProfileImage(event) {
        const file = event.target.files[0];
        if (file) {
            const formData = new FormData();
            formData.append('file', file);

            // Gönderim
            const response = await fetch('/RegisterCustomer/UploadImage', {
                method: 'POST',
                body: formData
            });

            if (response.ok) {
                const result = await response.json();
                document.getElementById('floatingInputTitle').value = result.filePath;
                document.getElementById('preview-avatar').src = result.filePath;
            } else {
                alert('Resim yüklenirken bir hata oluştu!');
            }
        }
    }
</script>